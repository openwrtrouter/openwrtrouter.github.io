# This file is generated by gyp; do not edit.

TOOLSET := host
TARGET := torque_base
DEFS_Debug := \
	'-DV8_GYP_BUILD' \
	'-DV8_TYPED_ARRAY_MAX_SIZE_IN_HEAP=64' \
	'-D__STDC_FORMAT_MACROS' \
	'-DV8_TARGET_ARCH_ARM' \
	'-DCAN_USE_ARMV7_INSTRUCTIONS' \
	'-DCAN_USE_VFP3_INSTRUCTIONS' \
	'-DCAN_USE_VFP32DREGS' \
	'-DCAN_USE_NEON' \
	'-DV8_EMBEDDER_STRING="-node.84"' \
	'-DENABLE_DISASSEMBLER' \
	'-DV8_PROMISE_INTERNAL_FIELD_COUNT=1' \
	'-DENABLE_MINOR_MC' \
	'-DOBJECT_PRINT' \
	'-DV8_CONCURRENT_MARKING' \
	'-DV8_ARRAY_BUFFER_EXTENSION' \
	'-DV8_ENABLE_LAZY_SOURCE_POSITIONS' \
	'-DV8_USE_SIPHASH' \
	'-DDISABLE_UNTRUSTED_CODE_MITIGATIONS' \
	'-DV8_WIN64_UNWINDING_INFO' \
	'-DV8_ENABLE_REGEXP_INTERPRETER_THREADED_DISPATCH' \
	'-DV8_SNAPSHOT_COMPRESSION' \
	'-DUSE_EABI_HARDFLOAT=1' \
	'-DDEBUG' \
	'-D_DEBUG' \
	'-DV8_ENABLE_CHECKS' \
	'-DVERIFY_HEAP' \
	'-DV8_TRACE_MAPS' \
	'-DV8_ENABLE_ALLOCATION_TIMEOUT' \
	'-DV8_ENABLE_FORCE_SLOW_PATH' \
	'-DENABLE_HANDLE_ZAPPING'

# Flags passed to all source files.
CFLAGS_Debug := \
	-pthread \
	-Wno-unused-parameter \
	-Wno-return-type \
	-fno-strict-aliasing \
	-m32 \
	-g \
	-Woverloaded-virtual \
	 \
	-fdata-sections \
	-ffunction-sections \
	-O3

# Flags passed to only C files.
CFLAGS_C_Debug :=

# Flags passed to only C++ files.
CFLAGS_CC_Debug := \
	-fno-rtti \
	-std=gnu++1y \
	-fexceptions

INCS_Debug := \
	-I/workdir/openwrt/staging_dir/target-arm_cortex-a7+neon-vfpv4_musl_eabi/usr/include \
	-I$(srcdir)/deps/v8 \
	-I$(srcdir)/deps/v8/include

DEFS_Release := \
	'-DV8_GYP_BUILD' \
	'-DV8_TYPED_ARRAY_MAX_SIZE_IN_HEAP=64' \
	'-D__STDC_FORMAT_MACROS' \
	'-DV8_TARGET_ARCH_ARM' \
	'-DCAN_USE_ARMV7_INSTRUCTIONS' \
	'-DCAN_USE_VFP3_INSTRUCTIONS' \
	'-DCAN_USE_VFP32DREGS' \
	'-DCAN_USE_NEON' \
	'-DV8_EMBEDDER_STRING="-node.84"' \
	'-DENABLE_DISASSEMBLER' \
	'-DV8_PROMISE_INTERNAL_FIELD_COUNT=1' \
	'-DENABLE_MINOR_MC' \
	'-DOBJECT_PRINT' \
	'-DV8_CONCURRENT_MARKING' \
	'-DV8_ARRAY_BUFFER_EXTENSION' \
	'-DV8_ENABLE_LAZY_SOURCE_POSITIONS' \
	'-DV8_USE_SIPHASH' \
	'-DDISABLE_UNTRUSTED_CODE_MITIGATIONS' \
	'-DV8_WIN64_UNWINDING_INFO' \
	'-DV8_ENABLE_REGEXP_INTERPRETER_THREADED_DISPATCH' \
	'-DV8_SNAPSHOT_COMPRESSION' \
	'-DUSE_EABI_HARDFLOAT=1'

# Flags passed to all source files.
CFLAGS_Release := \
	-pthread \
	-Wno-unused-parameter \
	-Wno-return-type \
	-fno-strict-aliasing \
	-m32 \
	-O3 \
	-fno-omit-frame-pointer \
	-fdata-sections \
	-ffunction-sections \
	 \
	-O3

# Flags passed to only C files.
CFLAGS_C_Release :=

# Flags passed to only C++ files.
CFLAGS_CC_Release := \
	-fno-rtti \
	-std=gnu++1y \
	-fexceptions

INCS_Release := \
	-I/workdir/openwrt/staging_dir/target-arm_cortex-a7+neon-vfpv4_musl_eabi/usr/include \
	-I$(srcdir)/deps/v8 \
	-I$(srcdir)/deps/v8/include

OBJS := \
	$(obj).host/$(TARGET)/deps/v8/src/torque/cfg.o \
	$(obj).host/$(TARGET)/deps/v8/src/torque/class-debug-reader-generator.o \
	$(obj).host/$(TARGET)/deps/v8/src/torque/csa-generator.o \
	$(obj).host/$(TARGET)/deps/v8/src/torque/declarable.o \
	$(obj).host/$(TARGET)/deps/v8/src/torque/declaration-visitor.o \
	$(obj).host/$(TARGET)/deps/v8/src/torque/declarations.o \
	$(obj).host/$(TARGET)/deps/v8/src/torque/earley-parser.o \
	$(obj).host/$(TARGET)/deps/v8/src/torque/global-context.o \
	$(obj).host/$(TARGET)/deps/v8/src/torque/implementation-visitor.o \
	$(obj).host/$(TARGET)/deps/v8/src/torque/instance-type-generator.o \
	$(obj).host/$(TARGET)/deps/v8/src/torque/instructions.o \
	$(obj).host/$(TARGET)/deps/v8/src/torque/server-data.o \
	$(obj).host/$(TARGET)/deps/v8/src/torque/source-positions.o \
	$(obj).host/$(TARGET)/deps/v8/src/torque/torque-compiler.o \
	$(obj).host/$(TARGET)/deps/v8/src/torque/torque-parser.o \
	$(obj).host/$(TARGET)/deps/v8/src/torque/type-inference.o \
	$(obj).host/$(TARGET)/deps/v8/src/torque/type-oracle.o \
	$(obj).host/$(TARGET)/deps/v8/src/torque/type-visitor.o \
	$(obj).host/$(TARGET)/deps/v8/src/torque/types.o \
	$(obj).host/$(TARGET)/deps/v8/src/torque/utils.o

# Add to the list of files we specially track dependencies for.
all_deps += $(OBJS)

# Make sure our dependencies are built before any of us.
$(OBJS): | $(obj).host/tools/v8_gypfiles/v8_shared_internal_headers.stamp

# CFLAGS et al overrides must be target-local.
# See "Target-specific Variable Values" in the GNU Make manual.
$(OBJS): TOOLSET := $(TOOLSET)
$(OBJS): GYP_CFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_C_$(BUILDTYPE))
$(OBJS): GYP_CXXFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_CC_$(BUILDTYPE))

# Suffix rules, putting all outputs into $(obj).

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(srcdir)/%.cc FORCE_DO_CMD
	@$(call do_cmd,cxx,1)

# Try building from generated source, too.

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj).$(TOOLSET)/%.cc FORCE_DO_CMD
	@$(call do_cmd,cxx,1)

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj)/%.cc FORCE_DO_CMD
	@$(call do_cmd,cxx,1)

# End of this set of suffix rules
### Rules for final target.
LDFLAGS_Debug := \
	-pthread \
	-rdynamic \
	-m32

LDFLAGS_Release := \
	-pthread \
	-rdynamic \
	-m32

LIBS := \
	-L/workdir/openwrt/staging_dir/target-arm_cortex-a7+neon-vfpv4_musl_eabi/usr/lib \
	-lz \
	-lnghttp2 \
	-lcrypto \
	-lssl

$(obj).host/tools/v8_gypfiles/libtorque_base.a: GYP_LDFLAGS := $(LDFLAGS_$(BUILDTYPE))
$(obj).host/tools/v8_gypfiles/libtorque_base.a: LIBS := $(LIBS)
$(obj).host/tools/v8_gypfiles/libtorque_base.a: TOOLSET := $(TOOLSET)
$(obj).host/tools/v8_gypfiles/libtorque_base.a: $(OBJS)
	$(call create_thin_archive,$@,$^)

# Add target alias
.PHONY: torque_base
torque_base: $(obj).host/tools/v8_gypfiles/libtorque_base.a

# Add target alias to "all" target.
.PHONY: all
all: torque_base

